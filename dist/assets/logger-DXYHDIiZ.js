const i={ERROR:"ERROR",WARN:"WARN",INFO:"INFO"},c=!1,f=[/token/i,/password/i,/secret/i,/key/i,/auth/i,/bearer/i,/authorization/i,/credential/i],o=n=>{if(!n||typeof n!="object")return n;if(Array.isArray(n))return n.map(o);const e={};for(const[t,s]of Object.entries(n))f.some(u=>u.test(t))?e[t]="[REDACTED]":typeof s=="object"&&s!==null?e[t]=o(s):e[t]=s;return e},r=(n,e,t={})=>{const s=new Date().toISOString(),a=o(t);return{timestamp:s,level:n,message:e,context:a,environment:"production"}};class R{constructor(){this.enabled=c}error(e,t={}){this.enabled&&r(i.ERROR,e,t)}warn(e,t={}){this.enabled&&r(i.WARN,e,t)}info(e,t={}){this.enabled&&r(i.INFO,e,t)}debug(e,t={}){this.enabled}apiRequest(e,t,s={}){this.debug(`API Request: ${t} ${e}`,{endpoint:e,method:t,data:o(s)})}apiResponse(e,t,s={}){this.debug(`API Response: ${e} (${t})`,{endpoint:e,status:t,data:o(s)})}apiError(e,t){var s;this.error(`API Error: ${e}`,{endpoint:e,error:t.message||t,status:(s=t.response)==null?void 0:s.status})}componentMount(e){this.debug(`Component mounted: ${e}`)}componentUnmount(e){this.debug(`Component unmounted: ${e}`)}userAction(e,t={}){this.info(`User action: ${e}`,o(t))}performance(e,t,s={}){this.info(`Performance: ${e} took ${t}ms`,o(s))}}const m=new R;export{i as LOG_LEVELS,m as default};
